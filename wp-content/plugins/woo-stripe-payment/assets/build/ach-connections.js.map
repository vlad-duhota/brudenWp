{"version":3,"file":"ach-connections.js","mappings":"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","sources":["webpack://woo-stripe-payment/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://woo-stripe-payment/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://woo-stripe-payment/external window \"jQuery\"","webpack://woo-stripe-payment/external window [\"wc_stripe\"]","webpack://woo-stripe-payment/webpack/bootstrap","webpack://woo-stripe-payment/./assets/js/frontend/ach-connections.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","module.exports = window[\"jQuery\"];","module.exports = window[\"wc_stripe\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import $ from 'jquery';\nimport {BaseGateway, CheckoutGateway} from '@paymentplugins/wc-stripe';\n\nfunction StripeACH(params) {\n    BaseGateway.call(this, params);\n    CheckoutGateway.call(this);\n}\n\n\nStripeACH.prototype.initialize = function () {\n    window.addEventListener('hashchange', this.hashchange.bind(this));\n    $(document.body).on('payment_method_selected', this.payment_method_selected.bind(this));\n    $(document.body).on('click', '#place_order', this.on_order_pay.bind(this));\n}\n\nStripeACH.prototype.checkout_place_order = function () {\n    this.payment_token_received = true;\n    return CheckoutGateway.prototype.checkout_place_order.apply(this);\n}\n\nStripeACH.prototype.on_order_pay = function (e) {\n    if (this.is_gateway_selected()) {\n        // create the setup intent.\n        if (this.is_change_payment_method()) {\n            const {order_id, order_key} = this.params;\n            e.preventDefault();\n            this.create_setup_intent({order_id, order_key}).then(({setup_intent}) => {\n                this.handle_payment_method_setup({\n                    order_id,\n                    order_key,\n                    client_secret: setup_intent.client_secret\n                });\n            });\n        } else if (this.is_current_page('order_pay')) {\n            e.preventDefault();\n            this.process_order_pay();\n        }\n    }\n}\n\nStripeACH.prototype.handle_next_action = function (data) {\n    const {client_secret} = data;\n    this.stripe.collectBankAccountForPayment({\n        clientSecret: client_secret,\n        params: {\n            payment_method_type: 'us_bank_account',\n            payment_method_data: {\n                billing_details: {\n                    name: this.get_customer_name(this.get_billing_prefix()),\n                    email: this.fields.get('billing_email', null),\n                },\n            },\n        }\n    }).then(({paymentIntent, error}) => {\n        if (error) {\n            return this.submit_error(error);\n        }\n        // show the mandate confirmation\n        if (paymentIntent.status === \"requires_confirmation\") {\n            this.do_payment_confirmation(data);\n        } else {\n            this.cancel_payment_processing();\n        }\n    });\n}\n\nStripeACH.prototype.handle_payment_method_setup = function (data) {\n    const {client_secret} = data;\n    this.stripe.collectBankAccountForSetup({\n        clientSecret: client_secret,\n        params: {\n            payment_method_type: 'us_bank_account',\n            payment_method_data: {\n                billing_details: {\n                    name: this.get_customer_name(this.get_billing_prefix()),\n                    email: this.fields.get('billing_email', null),\n                },\n            },\n        }\n    }).then(({setupIntent, error}) => {\n        if (error) {\n            return this.submit_error(error);\n        }\n        // show the mandate confirmation\n        if (setupIntent.status === \"requires_confirmation\") {\n            this.do_setup_confirmation(data);\n        } else {\n            this.cancel_payment_processing();\n        }\n    });\n}\n\nStripeACH.prototype.do_payment_confirmation = function ({client_secret, order_id, order_key}) {\n    this.stripe.confirmUsBankAccountPayment(client_secret).then(({paymentIntent, error}) => {\n        if (error) {\n            return this.submit_error(error);\n        }\n        if (paymentIntent.status === 'requires_payment_method') {\n            this.cancel_payment_processing();\n        } else if (paymentIntent.status === 'requires_action') {\n            // paymentIntent?.next_action?.type === 'verify_with_microdeposits'\n            // todo - eventually support microdeposits. For now, show a message\n            this.cancel_payment_processing();\n            return this.submit_error({code: 'ach_instant_only'});\n        } else if (paymentIntent.status === 'processing') {\n            this.set_nonce(paymentIntent.payment_method);\n            if (this.is_current_page('order_pay')) {\n                this.get_form().trigger('submit');\n            } else {\n                this.process_payment(order_id, order_key);\n            }\n        }\n    });\n}\n\nStripeACH.prototype.do_setup_confirmation = function ({client_secret, order_id, order_key}) {\n    this.stripe.confirmUsBankAccountSetup(client_secret).then(({setupIntent, error}) => {\n        if (error) {\n            return this.submit_error(error);\n        }\n        if (setupIntent.status === 'requires_payment_method') {\n            this.cancel_payment_processing();\n        } else if (setupIntent.status === 'requires_action') {\n            // paymentIntent?.next_action?.type === 'verify_with_microdeposits'\n            // todo - eventually support microdeposits. For now, show a message\n            this.cancel_payment_processing();\n            return this.submit_error({code: 'ach_instant_only'});\n        } else if (setupIntent.status === 'succeeded') {\n            this.set_nonce(setupIntent.payment_method);\n            if (this.is_current_page('order_pay') || this.is_change_payment_method()) {\n                this.get_form().trigger('submit');\n            } else {\n                this.process_payment(order_id, order_key);\n            }\n        }\n    });\n}\n\nStripeACH.prototype.hide_place_order = function () {\n}\n\nStripeACH.prototype.cancel_payment_processing = function () {\n    $(this.container).closest('form').removeClass('processing');\n    $(this.container).closest('form')?.unblock();\n}\n\nStripeACH.prototype.fees_enabled = function () {\n    return this.params.fees_enabled == \"1\";\n}\n\nStripeACH.prototype.payment_method_selected = function () {\n    if (this.fees_enabled()) {\n        $(document.body).trigger('update_checkout');\n    }\n}\n\nStripeACH.prototype.create_setup_intent = function (data) {\n    return new Promise((resolve, reject) => {\n        $.ajax({\n            method: 'POST',\n            dataType: 'json',\n            data: {payment_method: this.gateway_id, ...data},\n            url: this.params.routes.base_path.replace('%s', 'wc-stripe/v1/subscriptions/setup-intent'),\n            beforeSend: this.ajax_before_send.bind(this)\n        }).done(response => {\n            if (response.code) {\n                reject(response.message);\n            } else {\n                resolve(response);\n            }\n        }).fail((xhr, textStatus, errorThrown) => {\n            this.submit_error(errorThrown);\n        });\n    })\n}\n\nStripeACH.prototype = {...BaseGateway.prototype, ...CheckoutGateway.prototype, ...StripeACH.prototype};\n\nnew StripeACH(wc_stripe_ach_connections_params);"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__esModule","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","StripeACH","params","BaseGateway","call","this","CheckoutGateway","prototype","initialize","addEventListener","hashchange","bind","document","body","on","payment_method_selected","on_order_pay","checkout_place_order","payment_token_received","apply","e","is_gateway_selected","is_change_payment_method","order_id","order_key","preventDefault","create_setup_intent","then","setup_intent","handle_payment_method_setup","client_secret","is_current_page","process_order_pay","handle_next_action","data","stripe","collectBankAccountForPayment","clientSecret","payment_method_type","payment_method_data","billing_details","name","get_customer_name","get_billing_prefix","email","fields","get","paymentIntent","error","submit_error","status","do_payment_confirmation","cancel_payment_processing","collectBankAccountForSetup","setupIntent","do_setup_confirmation","confirmUsBankAccountPayment","code","set_nonce","payment_method","get_form","trigger","process_payment","confirmUsBankAccountSetup","hide_place_order","container","closest","removeClass","unblock","fees_enabled","Promise","resolve","reject","$","ajax","method","dataType","gateway_id","url","routes","base_path","replace","beforeSend","ajax_before_send","done","response","message","fail","xhr","textStatus","errorThrown","wc_stripe_ach_connections_params"],"sourceRoot":""}